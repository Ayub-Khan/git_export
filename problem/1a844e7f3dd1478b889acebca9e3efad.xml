<problem display_name="Problem 6 Part 1 of 3" markdown="null" max_attempts="10" showanswer="past_due" weight="10.0">
  <text>
    <p>
      <b>
        <font color="red">If you are done the exam, <a href="https://docs.google.com/forms/d/1mMEeZz2KBcBZHbQA_Fu9DrclOoIHwsuIT9YF2uqG5ts/" target="_blank">click here to checkout</a>. Only checkout once to remove your quiz access. <br/> If you do not checkout you will receive a zero on the exam.</font>
      </b>
    </p>
    <p>You are given the following superclass. Do not modify this.</p>
    <pre>class Container(object):
    """ Holds hashable objects. Objects may occur 0 or more times """
    def __init__(self):
        """ Creates a new container with no objects in it. I.e., any object 
            occurs 0 times in self. """
        self.vals = {}
    def insert(self, e):
        """ assumes e is hashable
            Increases the number of times e occurs in self by 1. """
        try:
            self.vals[e] += 1
        except:
            self.vals[e] = 1
    def __str__(self):
        s = ""
        for i in sorted(self.vals.keys()):
            if self.vals[i] != 0:
                s += str(i)+":"+str(self.vals[i])+"\n"
        return s
</pre>
    <p>Write a class that implements the specifications below. Do not add any new methods. Do not override any methods of Container.</p>
    <pre>class Bag(Container):
    def remove(self, e):
        """ assumes e is hashable
            If e is in self, reduces the number of times it 
            occurs in self by 1. Otherwise does nothing. """
        # write code here

    def count(self, e):
        """ assumes e is hashable
            Returns the number of times e occurs in self. 
            If e is not in self, returns 0.
        """
        # write code here
</pre>
    <ul>
      <li>For example,
    <pre>d1 = Bag()
d1.insert(4)
d1.insert(4)
print(d1)
d1.remove(2)
print(d1)
</pre>
prints
<pre>
4:2
4:2
</pre>
      </li>
      <li>For example,
    <pre>d1 = Bag()
d1.insert(4)
d1.insert(4)
d1.insert(4)
print(d1.count(2))
print(d1.count(4))
</pre>
prints
<pre>
0
3
</pre>  
      </li>
    </ul>
    <p>Paste your entire <code>Bag</code> class, including the definition, in the box below. Do not leave any debugging print statements.</p>
  </text>
  <coderesponse queuename="Watcher-MITx-6.0001r">
    <textbox rows="30" cols="80" mode="python" tabsize="4"/>
    <codeparam>
      <grader_payload>
{"grader": "quiz/60001_s2018/bag/grade_bag_student.py", "hide_output": false}
</grader_payload>
    </codeparam>
  </coderesponse>
  <p><b>Note: An L379 or L397 error:</b> means that your code has an infinite loop for some test case. You will receive a zero for this problem if your code has an infinite loop.
  </p>
  <p><b>Note on Score Shown:</b> Your code will ultimately be run on our test cases. Getting "Correct"/green check during the exam does not mean you will get full points. The test cases here ensures you do not have a copy/paste error from your IDE.
  </p>
</problem>
