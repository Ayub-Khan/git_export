<problem display_name="Problem 4" markdown="null" max_attempts="10" showanswer="never">
  <text>
    <p>
Write a Python function that creates and returns a list of prime numbers
      between 2 and <code>N</code>, inclusive, sorted in increasing order. To do this, maintain a list of prime  numbers found so far. Go 
      through all numbers from 2 to <code>N</code>, and for each number, test if it is divisible
      by any of the primes found so far. If not, add it to the list.</p>
    <p>Hint: Writing this function will require two nested loops.</p>
    <p>This function takes in an integer and returns a list of integers.</p>
    <pre>def primes_list(N):
    '''
    N: an integer
    '''
    # Your code here
    </pre>
  </text>
  <coderesponse queuename="Watcher-MITx-6.0001r">
    <textbox rows="10" cols="80" mode="python" tabsize="4"/>
    <codeparam>
      <initial_display>
def primes_list(N):
    '''
    N: an integer
    '''
    # Your code here
      </initial_display>
      <answer_display>
def primes_list(N):
    primes_list = [2]
    for i in range(3, N+1):
        is_prime = True
        for j in primes_list:
            if i % j == 0:
                is_prime = False
        if is_prime:
            primes_list.append(i)
    return primes_list
</answer_display>
      <grader_payload>
{"grader": "finger_exercises/L6/primes_list/grade_primes_list.py", "hide_output": false}
</grader_payload>
    </codeparam>
  </coderesponse>
  <p>
    <b>During the actual exam, you will only see one or two test cases.  </b>
  </p>
</problem>
