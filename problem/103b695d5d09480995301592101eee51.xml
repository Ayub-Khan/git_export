<problem display_name="Problem 6 Part 3 of 3" markdown="null" max_attempts="10" showanswer="never" weight="12.0">
  <text>
    <p>
      <b>
        <font color="red">If you are done the exam, <a href="https://docs.google.com/forms/d/1mMEeZz2KBcBZHbQA_Fu9DrclOoIHwsuIT9YF2uqG5ts/" target="_blank">click here to checkout</a>. Only checkout once to remove your quiz access. <br/> If you do not checkout you will receive a zero on the exam.</font>
      </b>
    </p>
    <p>Write a class that implements the specifications below. Do not add any new methods. Do not override any methods of Container.</p>
    <pre>class ASet(Container):
    def remove(self, e):
        """ assumes e is hashable
            Sets the number of times e occurs in self to 0. For all e1, 
            if e1 != e, the number of times e1 occurs is unchanged. """
        # write code here

    def is_in(self, e):
        """ assumes e is hashable
            Returns True if e occurs at least once in self, 
            and False otherwise. """
        # write code here

</pre>
    <ul>
      <li>For example,
    <pre>d1 = ASet()
d1.insert(4)
d1.insert(4)

d1.remove(2)
print(d1)

d1.remove(4)
print(d1)
</pre>
prints
<pre>
4:2 # from d1.remove(2) print

    # (empty) from d1.remove(4) print
</pre>
      </li>
      <li>For example,
    <pre>d1 = ASet()
d1.insert(4)
print(d1.is_in(4))
d1.insert(5)
print(d1.is_in(5))
d1.remove(5)
print(d1.is_in(5))
</pre>
prints
<pre>
True
True
False
</pre>  
      </li>
    </ul>
    <p>Paste your entire <code>ASet</code> class, including the definition, in the box below. Do not leave any debugging print statements.</p>
  </text>
  <coderesponse queuename="Watcher-MITx-6.0001r">
    <textbox rows="30" cols="80" mode="python" tabsize="4"/>
    <codeparam>
      <grader_payload>
{"grader": "quiz/60001_s2018/aset/grade_aset_student.py", "hide_output": false}
</grader_payload>
    </codeparam>
  </coderesponse>
  <p><b>Note: An L379 or L397 error:</b> means that your code has an infinite loop for some test case. You will receive a zero for this problem if your code has an infinite loop.
  </p>
  <p><b>Note on Score Shown:</b> Your code will ultimately be run on our test cases. Getting "Correct"/green check during the exam does not mean you will get full points. The test cases here ensures you do not have a copy/paste error from your IDE.
  </p>
</problem>
