<problem display_name="Problem 7" markdown="null" max_attempts="10" showanswer="past_due" weight="25.0">
  <text>
    <p>
      <b>
        <font color="red">If you are done the exam, <a href="https://docs.google.com/forms/d/1AdYcxsYphMEOvfNaoZ9_phU6oedIksZQYDTxbl3lCJA/edit?usp=drive_web" target="_blank">click here to checkout</a>. Only checkout once to remove your quiz access. <br/> If you do not checkout you will receive a zero on the exam.</font>
      </b>
    </p>
    <p>
      Implement a class that meets the following specification: </p>
    <pre>
class strList(object):
    #strLists are mutable lists of strs
   
    def __init__(self):
        """
        creates an empty strList
        """
   
    def append(self, s):
        """
        assumes s is a str
        adds s to the end of self, returns None
        """

    def delete(self, s):
        """
        assumes s is a str
        deletes the first occurrence of s in self and returns None
        if s does not occur in self, raises ValueError
        """
                
    def len(self):
        """
        Returns an int that is the sum of the length of the
        strings in self
        """

    def uniqueAppends(self):
        """
        returns an int that is the total number of unique strings,
        including deleted elements, that have ever been
        appended to self
        """

    def __str__(self):
        """
        returns a str that is the concatenation of all of the
        strs in self
        """    
    </pre>
    <br/>
    <p>For example, the following code should print <code>ValueError</code>, then <code>11</code>, then <code>2</code>, and then <code>johnjohnana</code>.</p>
    <pre>sl = strList()
sl.append('john')
sl.append('ana')
sl.append('john')
sl.append('ana')
try:
    sl.delete('an')
except ValueError:
    print('ValueError')      
sl.delete('ana')
print(sl.len())
print(sl.uniqueAppends())
print(sl)
    </pre>
    <br/>
    <p>Paste your entire class, including all the methods, in the box below. Do not leave any debugging print statements.</p>
  </text>
  <coderesponse queuename="Watcher-MITx-6.0001r">
    <textbox rows="30" cols="80" mode="python" tabsize="4"/>
    <codeparam>
      <answer_display>
class strList(object):
    #strLists are mutable lists of strs
   
    def __init__(self):
        """
        creates an empty strList
        """
        self.vals = []
        self.allUniqueAppended = []
   
    def append(self, s):
        """
        assumes s is a str
        adds s to the end of self, returns None
        """
        self.vals.append(s)
        if s not in self.allUniqueAppended:
            self.allUniqueAppended.append(s)

    def delete(self, s):
        """
        assumes s is a str
        deletes the first occurrence of s in self and returns None
        if s does not occur in self, raises ValueError
        """
        try:
            indx = self.vals.index(s)
            self.vals.pop(indx)
        except:
            raise ValueError
                
    def len(self):
        """
        Returns an int that is the sum of the length of the
        strings in self
        """
        result = 0
        for s in self.vals:
            result += len(s)
        return result

    def uniqueAppends(self):
        """
        returns an int that is the total number of unique strings,
        including deleted elements, that have ever been
        appended to self
        """
        return len(self.allUniqueAppended)

    def __str__(self):
        """
        returns a str that is the concatenation of all of the
        strs in self
        """
        result = ''
        for s in self.vals:
            result += s
        return result
       
      </answer_display>
      <grader_payload>
{"grader": "quiz/60001_f2017/strList/grade_str_list_student.py", "hide_output": false}
</grader_payload>
    </codeparam>
  </coderesponse>
  <p><b>Note: An L379 or L397 error:</b> means that your code has an infinite loop for some test case. You will receive a zero for this problem if your code has an infinite loop.
  </p>
  <p><b>Note on Score Shown:</b> Your code will ultimately be run on our test cases. Getting "Correct"/green check during the exam does not mean you will get full points. The test cases here ensures you do not have a copy/paste error from your IDE.
  </p>
</problem>
