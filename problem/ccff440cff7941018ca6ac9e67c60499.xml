<problem display_name="Problem 7" markdown="null" max_attempts="10" showanswer="never" weight="20.0">
  <text>
    <p>
      <b>
        <font color="red">If you are done the exam, <a href="https://docs.google.com/forms/d/1mMEeZz2KBcBZHbQA_Fu9DrclOoIHwsuIT9YF2uqG5ts/" target="_blank">click here to checkout</a>. Only checkout once to remove your quiz access. <br/> If you do not checkout you will receive a zero on the exam.</font>
      </b>
    </p>
    <p>Write a function that implements the specification below.</p>
    <ul>
      <li>Assume all letters in the dictionary and all words in the list are lowercase.</li>
      <li>The dictionary maps a letter (str) to how many of that letter you have (int).</li>
      <li>You do not need to use all the letters in the dictionary.</li>
      <li>The list of words may not be in alphabetical order.</li>
    </ul>
    <pre>def longest_word(d, words):
    '''
    d: a dictionary mapping lowercase letters to an integers
    words: a list containing valid lowercase words
    Returns the longest word found in the word list that can be made 
            with letters in d. If more than one word is the same length
            returns the one that comes first alphabetically. 
            If no word is found in the word list, returns None.
    '''
</pre>
    <p>For example:</p>
    <ul>
      <li>If <code>d = {'a':1, 'b':1, 'c':1, 'd':1}</code> and <code>words = ['baa', 'cab', 'bat', 'a', 'cabs']</code> then <code>longest_word(d, words)</code> returns <code>'cab'</code> </li>
      <li>If <code>d = {'a':3, 'b':1, 'c':1}</code> and <code>words = ['baa', 'cab', 'bat', 'abracadabra', 'cabs']</code> then <code>longest_word(d, words)</code> returns <code>'baa'</code> </li>
    </ul>
    <p>Paste your entire function, including the definition, in the box below. Do not leave any debugging print statements.</p>
  </text>
  <coderesponse queuename="Watcher-MITx-6.0001r">
    <textbox rows="30" cols="80" mode="python" tabsize="4"/>
    <codeparam>
      <grader_payload>
{"grader": "quiz/60001_s2018/longest_word/grade_longest_word_student.py", "hide_output": false}
</grader_payload>
    </codeparam>
  </coderesponse>
  <p><b>Note: An L379 or L397 error:</b> means that your code has an infinite loop for some test case. You will receive a zero for this problem if your code has an infinite loop.
  </p>
  <p><b>Note on Score Shown:</b> Your code will ultimately be run on our test cases. Getting "Correct"/green check during the exam does not mean you will get full points. The test cases here ensures you do not have a copy/paste error from your IDE.
  </p>
</problem>
