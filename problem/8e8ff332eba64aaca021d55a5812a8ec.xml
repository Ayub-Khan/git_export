<problem display_name="Q6-3" markdown="null" weight="12.0">
  <text>
    <p>Write a class that implements the specifications below. Do not override any methods of Container.</p>
    <pre>class ASet(Container):
    def remove(self, e):
        """assumes e is hashable
           removes e from self"""
        # write code here

    def is_in(self, e):
        """assumes e is hashable
           returns True if e has been inserted in self and
           not subsequently removed, and False otherwise."""
        # write code here

</pre>
    <ul>
      <li>For example,
    <pre>d1 = ASet()
d1.insert(4)
d1.insert(4)

d1.remove(2)
print(d1)

d1.remove(4)
print(d1)
</pre>
prints
<pre>
4:2 # from d1.remove(2) print

    # (empty) from d1.remove(4) print
</pre>
      </li>
      <li>For example,
    <pre>d1 = ASet()
d1.insert(4)
print(d1.is_in(4))
d1.insert(5)
print(d1.is_in(5))
d1.remove(5)
print(d1.is_in(5))
</pre>
prints
<pre>
True
True
False
</pre>  
      </li>
    </ul>
    <p>Paste your entire class, including the definition, in the box below. Do not leave any debugging print statements.</p>
  </text>
  <coderesponse queuename="Watcher-MITx-6.0001r">
    <textbox rows="30" cols="80" mode="python" tabsize="4"/>
    <codeparam>
      <grader_payload>
{"grader": "quiz/60001_s2017/aset/grade_aset_student.py", "hide_output": false}
</grader_payload>
    </codeparam>
  </coderesponse>
  <p><b>Note: An L379 or L397 error:</b> means that your code has an infinite loop for some test case. You will receive a zero for this problem if your code has an infinite loop.
  </p>
  <p><b>Note on Score Shown:</b> Your code will ultimately be run on our test cases. Getting "Correct"/green check during the exam does not mean you will get full points. The test cases here ensures you do not have a copy/paste error from your IDE.
  </p>
</problem>
